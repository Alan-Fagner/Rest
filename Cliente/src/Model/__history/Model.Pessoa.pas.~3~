unit Model.Pessoa;

interface

uses
  Model.Interfaces,
  System.Classes,
  System.Generics.Collections,
  idHTTP;

type

  TModelPessoa = class(TInterfacedObject, iPessoa)
  private
    HTTP: TIdHTTP;
    Response: TStringStream;

    FID : Integer;
    FNatureza : Integer;
    FDocumento : string;
    FPrimeiro : String;
    FSegundo : String;
    FDtRegistro : TDateTime;

  public
    constructor Create;
    destructor Destroy; override;
    class function New : iPessoa;

    function List(ID: string): TList<TModelPessoa>;

    function ID (Value: Integer) : iPessoa; overload;
    Function ID : Integer; overload;
    function NATUREZA (Value: Integer) : iPessoa; overload;
    Function NATUREZA : Integer; overload;
    function DOCUMENTO (Value: string) : iPessoa; overload;
    Function DOCUMENTO : string; overload;
    Function NMPRIMEIRO (Value: string) : iPessoa; overload;
    Function NMPRIMEIRO : string; overload;
    Function NMSEGUNDO (Value: string) : iPessoa; overload;
    Function NMSEGUNDO : string; overload;
    Function DTREGISTRO (Value: TDateTime) : iPessoa; overload;
    Function DTREGISTRO : TDateTime; overload;

  end;

const
  URL = 'http://localhost:8085/api/rest/pessoa';

implementation

uses
  System.SysUtils;

{ TModelPessoa }

constructor TModelPessoa.Create;
begin
  HTTP := TIdHTTP.Create;
  Response := TStringStream.Create('');
end;

destructor TModelPessoa.Destroy;
begin
  FreeAndNil(HTTP);
  Response.Destroy;
  inherited;
end;

function TModelPessoa.List(ID: string): TList<TModelPessoa>;
var
  txt : string;
begin
  HTTP.Get(URL,Response);

  txt := Response.DataString;

end;

function TModelPessoa.DOCUMENTO: string;
begin
  Result := FDocumento;
end;

function TModelPessoa.DOCUMENTO(Value: string): iPessoa;
begin
  Result := Self;
  FDocumento := Value;
end;

function TModelPessoa.DTREGISTRO: TDateTime;
begin
  Result := FDtRegistro;
end;

function TModelPessoa.DTREGISTRO(Value: TDateTime): iPessoa;
begin
  Result := Self;
  FDtRegistro := Value;
end;

function TModelPessoa.ID: Integer;
begin
  Result := FID;
end;

function TModelPessoa.ID(Value: Integer): iPessoa;
begin
  Result := Self;
  FID := Value;
end;

function TModelPessoa.NATUREZA: Integer;
begin
  Result := FNatureza;
end;

function TModelPessoa.NATUREZA(Value: Integer): iPessoa;
begin
  Result := Self;
  FNatureza := Value;
end;

class function TModelPessoa.New: iPessoa;
begin
  Result := Self.Create;
end;

function TModelPessoa.NMPRIMEIRO(Value: string): iPessoa;
begin
  Result := Self;
  FPrimeiro := Value;
end;

function TModelPessoa.NMPRIMEIRO: string;
begin
  Result := FPrimeiro;
end;

function TModelPessoa.NMSEGUNDO(Value: string): iPessoa;
begin
  Result := Self;
  FSegundo := Value;
end;

function TModelPessoa.NMSEGUNDO: string;
begin
  Result := FSegundo;
end;

end.
